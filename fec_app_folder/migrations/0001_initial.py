# Generated by Django 4.0.7 on 2022-09-28 08:24

from django.db import migrations, models
import django.utils.timezone
import fec_app_folder.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_number', models.CharField(help_text='学籍番号', max_length=11, verbose_name='学籍番号')),
                ('room_number', models.CharField(help_text='教室名', max_length=6, verbose_name='教室名')),
                ('time', models.IntegerField(choices=[(1, '1限目'), (2, '2限目'), (3, '3限目'), (4, '4限目'), (5, '5限目'), (6, '6限目')], help_text='時間割', verbose_name='時間割')),
                ('date', models.DateField(auto_now=True, help_text='日付', verbose_name='日付')),
                ('use_num', models.IntegerField(help_text='利用人数', verbose_name='利用人数')),
                ('sound', models.IntegerField(choices=[(1, '誰もいなかった'), (2, '少しいたが静かだった'), (3, '大勢いたが静かだった'), (4, '普通'), (5, '少しいたがうるさかった'), (6, '大勢いてうるさかった')], help_text='騒音度', verbose_name='騒音度')),
            ],
            options={
                'verbose_name': 'AssetDB',
                'verbose_name_plural': 'AssetDB',
            },
        ),
        migrations.CreateModel(
            name='RoomDB',
            fields=[
                ('room_number', models.CharField(help_text='教室名', max_length=6, primary_key=True, serialize=False, verbose_name='教室名')),
                ('capacity', models.IntegerField(help_text='収容人数', verbose_name='収容人数')),
            ],
            options={
                'verbose_name': 'RoomDB',
                'verbose_name_plural': 'RoomDB',
            },
        ),
        migrations.CreateModel(
            name='SolidDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_week', models.IntegerField(choices=[(1, '月曜日'), (2, '火曜日'), (3, '水曜日'), (4, '木曜日'), (5, '金曜日'), (6, '土曜日'), (7, '日曜日')], help_text='曜日', verbose_name='曜日')),
                ('room_number', models.CharField(help_text='教室名', max_length=6, verbose_name='教室名')),
                ('time', models.IntegerField(choices=[(1, '1限目'), (2, '2限目'), (3, '3限目'), (4, '4限目'), (5, '5限目'), (6, '6限目')], help_text='時間割', verbose_name='時間割')),
                ('comment', models.CharField(blank=True, help_text='コメント', max_length=255, null=True, verbose_name='コメント')),
            ],
            options={
                'verbose_name': 'SolidDB',
                'verbose_name_plural': 'SolidDB',
            },
        ),
        migrations.CreateModel(
            name='TemporaryDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(help_text='教室名', max_length=6, verbose_name='教室名')),
                ('time', models.IntegerField(choices=[(1, '1限目'), (2, '2限目'), (3, '3限目'), (4, '4限目'), (5, '5限目'), (6, '6限目')], help_text='時間割', verbose_name='時間割')),
                ('student_reserved', models.IntegerField(default=0, help_text='学生予約(学生予約でないなら0学生予約なら人数)', verbose_name='学生予約')),
                ('date', models.DateField(help_text='日付', verbose_name='日付')),
            ],
            options={
                'verbose_name': 'TemporaryDB',
                'verbose_name_plural': 'TemporaryDB',
            },
        ),
        migrations.CreateModel(
            name='UserDB',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(help_text='学籍番号', max_length=15, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'UserDB',
                'verbose_name_plural': 'UserDB',
            },
            managers=[
                ('objects', fec_app_folder.models.CustomUserManager()),
            ],
        ),
    ]
